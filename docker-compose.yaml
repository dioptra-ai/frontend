version: '3.4'

services:
  db:
    image: mongo:latest
    container_name: dioptra-db
    restart: always
    ports: 
      - "4005:27017"
    networks:
      - app-network

  nodejs:
    depends_on:
      - db
    build: .
    image: dioptra-frontend:latest
    container_name: dioptra-frontend
    restart: always
    env_file: .env
    environment:
      DB_CONNECTION_URI: "mongodb://dioptra-db:27017/dioptra"
      PORT: "4004"
      METRICS_ENGINE_URL: "http://metrics-engine:4006"
      # Druid router on arn:aws:eks:us-east-2:641017132295:cluster/dioptra-dev-eks
      DRUID_DB_URL: "http://a2db86db7435c46a58524f6d90839799-413940887.us-east-2.elb.amazonaws.com:8888/druid/v2/sql/"
      OVERRIDE_DRUID_ORG_ID: "61723d86f1796f8b73854a2d"
    ports:
      - '4004:4004'
    networks:
      - app-network
    volumes:
      - ./src:/app/src
      - ./index.mjs:/app/index.mjs
      - ./webpack.config.js:/app/webpack.config.js
    entrypoint: /bin/sleep 36000
  metrics-engine:
    build:
      context: submodules/metrics-engine
      dockerfile: Dockerfile
      target: builder
    image: metrics-engine:latest
    container_name: metrics-engine
    restart: always
    environment:
      # Druid router on arn:aws:eks:us-east-2:641017132295:cluster/dioptra-dev-eks
      DRUID_DB_URL: "http://a2db86db7435c46a58524f6d90839799-413940887.us-east-2.elb.amazonaws.com:8888/druid/v2/sql/"
      LIMIT_EMBEDDING_QUERY: "1000"
      MONGO_URI: "mongodb://dioptra-db:27017/dioptra"
    ports:
      - '4006:4006'
    networks:
      - app-network
    # Uncomment to run the server manually and develop metrics-engine with docker exec.
    # entrypoint: /bin/sleep 36000
    volumes:
      - ./submodules/metrics-engine:/app

networks:
  app-network:
    driver: bridge
