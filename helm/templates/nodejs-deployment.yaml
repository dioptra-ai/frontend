apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose.yaml -o helm
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
  name: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose.yaml -o helm
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
    spec:
      containers:
        - env:
            - name: COOKIE_SECRET
              value: "12345"
            - name: COOKIE_DURATION_HRS
              value: "12"
            - name: DB_CONNECTION_URI
              value: mongodb://{{ .Release.Name }}-{{ .Values.environment }}-mongodb.default.svc.cluster.local:4005/dioptra
            - name: METRICS_ENGINE_URL
              value: http://{{ .Release.Name }}-{{ .Values.environment }}-metrics-engine.default.svc.cluster.local:4006
            - name: DRUID_DB_URL
              value: "http://dioptra-druid-router.default.svc.cluster.local:8888/druid/v2/sql/"
            - name: FLAG_DISABLE_REGISTER
              value: "true"
            - name: PORT
              value: "4004"
          image: 641017132295.dkr.ecr.us-east-2.amazonaws.com/frontend:latest
          name: dioptra-frontend
          ports:
            - containerPort: 4004
          resources: {}
      restartPolicy: Always
status: {}
