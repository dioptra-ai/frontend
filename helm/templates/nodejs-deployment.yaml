apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose.yaml -o helm
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
  name: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose.yaml -o helm
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: {{ .Release.Name }}-{{ .Values.environment }}-dioptra-app
    spec:
      containers:
        - env:
            - name: ENVIRONMENT
              value: "{{ .Values.environment }}"
            - name: COMMIT_REF
              value: "{{ .Values.imageTag }}"
            - name: COOKIE_SECRET
              value: "12345"
            - name: COOKIE_DURATION_HRS
              value: "12"
            - name: DB_CONNECTION_URI
              value: mongodb://{{ .Release.Name }}-{{ .Values.environment }}-mongodb:4005/dioptra
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.host }}
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.key }}
            - name: METRICS_ENGINE_URL
              value: http://metrics-engine:4006
            - name: TASK_ENGINE_URL
              value: "http://task-engine:8001"
            - name: INGESTION_ENDPOINT
              value: {{ .Values.ingestionEndpoint }}
            - name: AWS_S3_CUSTOMER_BUCKET
              value: "dioptra-client-data"
            - name: AWS_S3_CUSTOMER_BUCKET_REGION
              value: "us-east-2"
            - name: PORT
              value: "{{ .Values.app.port }}"
            - name: INTERNAL_PORT
              value: "{{ .Values.app.internalPort }}"
            - name: AWS_API_GATEWAY_PLAN_ID
              value: "{{ .Values.app.awsApiGatewayPlanId }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-key-frontend
                  key: aws_access_key_id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-key-frontend
                  key: aws_secret_access_key
                  optional: true
            # Used for the semi-public documentation.
            - name: BASIC_USERNAME
              value: "dioptra"
            - name: BASIC_PASSWORD
              value: "!37iM6jJIU8C"
            - name: AWS_INGESTION_STATE_MACHINE_ARN
              value: {{ .Values.awsIngestionStateMachineArn }}
          image: "641017132295.dkr.ecr.us-east-2.amazonaws.com/frontend:{{ .Values.imageTag }}"
          name: dioptra-frontend
          ports:
            - containerPort: 4004
            - containerPort: 4005
          resources: {}
      restartPolicy: Always
status: {}
