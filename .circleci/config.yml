# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build-and-push-image:
    executor:
      name: docker/machine
      dlc: true
    steps:
      - checkout
      - run:
          command: |
            git submodule init
            git submodule update --remote
      # aws-ecr/build-and-push-image doesn't use DLC as of circleci/aws-ecr@8.1.3 so we do it manually.
      - aws-ecr/ecr-login
      - docker/build:
          image: frontend
          extra_build_args: '--compress'
          tag: <<pipeline.git.revision>>,latest,<<pipeline.git.tag>>
          registry: 641017132295.dkr.ecr.us-east-2.amazonaws.com
      - docker/push:
          image: frontend
          tag: <<pipeline.git.revision>>,latest,<<pipeline.git.tag>>
          registry: 641017132295.dkr.ecr.us-east-2.amazonaws.com
  
  tag-image:
    docker:
      - image: cimg/aws:2022.11
    steps:
      - aws-ecr/tag-image:
          repo: frontend
          source-tag: <<pipeline.git.revision>>
          target-tag: <<pipeline.git.tag>>

  helm-upgrade:
    parameters:
      cluster-name:
        type: string
      aws-region:
        type: string
        default: us-east-2
      helm-values:
        type: string
      image-tag:
        type: string
        default: <<pipeline.git.revision>>
    circleci_ip_ranges: true
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: <<parameters.cluster-name>>
          aws-region: <<parameters.aws-region>>
      - checkout
      - helm/upgrade-helm-chart:
          atomic: true
          chart: ./helm
          helm-version: v3.6.0
          release-name: frontend
          update-repositories: false
          values: <<parameters.helm-values>>
          values-to-override: tag=<<parameters.image-tag>>

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  docker: circleci/docker@2.1.3
  helm: circleci/helm@1.2.0
  aws-eks: circleci/aws-eks@2.1.2
  node: circleci/node@4.5

workflows:
  Integration:
    jobs:
      - node/test:
          name: lint
          version: 16.4.0 # This to be kept in sync with Dockerfile
          run-command: lint
      - build-and-push-image:
          name: build-dev-image
          context:
            - aws-creds
          requires:
            - lint
          filters:
            branches:
              only:
                - dev
      - helm-upgrade:
          name: upgrade-dev
          cluster-name: dioptra-dev-eks
          helm-values: ./helm/values.dev.yaml
          image-tag: <<pipeline.git.revision>>
          context:
            - aws-creds
          requires:
            - build-dev-image
          filters:
            branches:
              only:
                - dev

  Delivery:
    jobs:
      - tag-image:
          name: tag-prod-image
          context:
            - aws-creds
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - helm-upgrade:
          name: upgrade-prod
          cluster-name: dioptra-prod-eks
          helm-values: ./helm/values.prod.yaml
          image-tag: <<pipeline.git.tag>>
          context:
            - aws-creds
          requires:
            - tag-prod-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
